#include <GL/glut.h>
#include <cmath>

// Function to draw a circle
    glColor3f(0.0f, 0.8f, 0.0f); // Green
    float leep1X = 0.5f, leep1Y = 2.0f, leep1Radius = 1.0f;
    glBegin(GL_TRIANGLE_FAN);
    glVertex2f(leep1X, leep1Y);
    for (int i = 0; i <= 100; i++) {
        float angle = i * 2.0f * 3.14159f / 100;
        float x = leep1Radius * cos(angle);
        float y = leep1Radius * sin(angle);
        glVertex2f(leep1X + x, leep1Y + y);
    }
    glEnd();



void display() {
    glClear(GL_COLOR_BUFFER_BIT);

    float startX = -0.8f, startY = 0.8f; // Starting position
    float spacing = 0.2f;               // Distance between circles
    float radius = 0.08f;               // Radius of each circle

    // Repeat circles in a grid (5x5)
    for (int row = 0; row < 5; row++) {
        for (int col = 0; col < 5; col++) {
            float x = startX + col * spacing;
            float y = startY - row * spacing;
            
            // Set color based on position
            glColor3f(1.0f - 0.2f * row, 0.2f * col, 0.5f);
            
            // Draw the circle
            drawCircle(x, y, radius);
        }
    }

    glFlush();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(800, 600);
    glutCreateWindow("Repeating Circles in OpenGL");

    glClearColor(0.5f, 0.8f, 1.0f, 1.0f); // Background color (sky blue)
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(-1.0, 1.0, -1.0, 1.0);

    glutDisplayFunc(display);
    glutMainLoop();

    return 0;
}